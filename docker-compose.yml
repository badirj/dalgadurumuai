version: '3.8'

services:
  # PostgreSQL veritabanÄ±
  postgres:
    image: postgres:13
    container_name: wave_analyzer_db
    environment:
      POSTGRES_DB: wave_analyzer
      POSTGRES_USER: wave_user
      POSTGRES_PASSWORD: wave_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U wave_user -d wave_analyzer"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Ana uygulama
  app:
    build: .
    container_name: wave_analyzer_app
    environment:
      - DATABASE_URL=postgresql://wave_user:wave_password@postgres:5432/wave_analyzer
      - SECRET_KEY=your-secret-key-change-this-in-production
      - DEBUG=False
      - HOST=0.0.0.0
      - PORT=5000
      - ANALYSIS_INTERVAL=5
      - SAVE_FRAMES=True
      - YOLO_CONFIDENCE_THRESHOLD=0.5
    volumes:
      - ./saved_frames:/app/saved_frames
      - ./logs:/app/logs
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy (opsiyonel)
  nginx:
    image: nginx:alpine
    container_name: wave_analyzer_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data: 